// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.6
// source: api/portal-biblioteca.proto

package br_ufu_facom_gbc074_projeto_biblioteca

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Usuario struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CPF do usuario (chave)
	Cpf  string `protobuf:"bytes,1,opt,name=cpf,proto3" json:"cpf,omitempty"`
	Nome string `protobuf:"bytes,2,opt,name=nome,proto3" json:"nome,omitempty"`
	// campo presente apenas no portal biblioteca
	Bloqueado bool `protobuf:"varint,3,opt,name=bloqueado,proto3" json:"bloqueado,omitempty"`
}

func (x *Usuario) Reset() {
	*x = Usuario{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_portal_biblioteca_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Usuario) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Usuario) ProtoMessage() {}

func (x *Usuario) ProtoReflect() protoreflect.Message {
	mi := &file_api_portal_biblioteca_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Usuario.ProtoReflect.Descriptor instead.
func (*Usuario) Descriptor() ([]byte, []int) {
	return file_api_portal_biblioteca_proto_rawDescGZIP(), []int{0}
}

func (x *Usuario) GetCpf() string {
	if x != nil {
		return x.Cpf
	}
	return ""
}

func (x *Usuario) GetNome() string {
	if x != nil {
		return x.Nome
	}
	return ""
}

func (x *Usuario) GetBloqueado() bool {
	if x != nil {
		return x.Bloqueado
	}
	return false
}

type Livro struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ISBN do livro (chave)
	Isbn   string `protobuf:"bytes,1,opt,name=isbn,proto3" json:"isbn,omitempty"`
	Titulo string `protobuf:"bytes,2,opt,name=titulo,proto3" json:"titulo,omitempty"`
	Autor  string `protobuf:"bytes,3,opt,name=autor,proto3" json:"autor,omitempty"`
	Total  int32  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	// campo presente apenas no portal biblioteca
	Restante int32 `protobuf:"varint,5,opt,name=restante,proto3" json:"restante,omitempty"`
}

func (x *Livro) Reset() {
	*x = Livro{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_portal_biblioteca_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Livro) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Livro) ProtoMessage() {}

func (x *Livro) ProtoReflect() protoreflect.Message {
	mi := &file_api_portal_biblioteca_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Livro.ProtoReflect.Descriptor instead.
func (*Livro) Descriptor() ([]byte, []int) {
	return file_api_portal_biblioteca_proto_rawDescGZIP(), []int{1}
}

func (x *Livro) GetIsbn() string {
	if x != nil {
		return x.Isbn
	}
	return ""
}

func (x *Livro) GetTitulo() string {
	if x != nil {
		return x.Titulo
	}
	return ""
}

func (x *Livro) GetAutor() string {
	if x != nil {
		return x.Autor
	}
	return ""
}

func (x *Livro) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Livro) GetRestante() int32 {
	if x != nil {
		return x.Restante
	}
	return 0
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 0 = sucesso, 1 = erro
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// detalhes do erro para status = 1
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_portal_biblioteca_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_portal_biblioteca_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_api_portal_biblioteca_proto_rawDescGZIP(), []int{2}
}

func (x *Status) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Status) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Identificador struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cpf para usuario, isbn para livro
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Identificador) Reset() {
	*x = Identificador{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_portal_biblioteca_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identificador) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identificador) ProtoMessage() {}

func (x *Identificador) ProtoReflect() protoreflect.Message {
	mi := &file_api_portal_biblioteca_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identificador.ProtoReflect.Descriptor instead.
func (*Identificador) Descriptor() ([]byte, []int) {
	return file_api_portal_biblioteca_proto_rawDescGZIP(), []int{3}
}

func (x *Identificador) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UsuarioLivro struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usuario *Identificador `protobuf:"bytes,1,opt,name=usuario,proto3" json:"usuario,omitempty"`
	Livro   *Identificador `protobuf:"bytes,2,opt,name=livro,proto3" json:"livro,omitempty"`
}

func (x *UsuarioLivro) Reset() {
	*x = UsuarioLivro{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_portal_biblioteca_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsuarioLivro) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsuarioLivro) ProtoMessage() {}

func (x *UsuarioLivro) ProtoReflect() protoreflect.Message {
	mi := &file_api_portal_biblioteca_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsuarioLivro.ProtoReflect.Descriptor instead.
func (*UsuarioLivro) Descriptor() ([]byte, []int) {
	return file_api_portal_biblioteca_proto_rawDescGZIP(), []int{4}
}

func (x *UsuarioLivro) GetUsuario() *Identificador {
	if x != nil {
		return x.Usuario
	}
	return nil
}

func (x *UsuarioLivro) GetLivro() *Identificador {
	if x != nil {
		return x.Livro
	}
	return nil
}

type UsuarioBloqueado struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usuario *Usuario `protobuf:"bytes,1,opt,name=usuario,proto3" json:"usuario,omitempty"`
	// livro(s) que causou(aram) bloqueio
	Livros []*Livro `protobuf:"bytes,2,rep,name=livros,proto3" json:"livros,omitempty"`
}

func (x *UsuarioBloqueado) Reset() {
	*x = UsuarioBloqueado{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_portal_biblioteca_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsuarioBloqueado) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsuarioBloqueado) ProtoMessage() {}

func (x *UsuarioBloqueado) ProtoReflect() protoreflect.Message {
	mi := &file_api_portal_biblioteca_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsuarioBloqueado.ProtoReflect.Descriptor instead.
func (*UsuarioBloqueado) Descriptor() ([]byte, []int) {
	return file_api_portal_biblioteca_proto_rawDescGZIP(), []int{5}
}

func (x *UsuarioBloqueado) GetUsuario() *Usuario {
	if x != nil {
		return x.Usuario
	}
	return nil
}

func (x *UsuarioBloqueado) GetLivros() []*Livro {
	if x != nil {
		return x.Livros
	}
	return nil
}

type Criterio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criterio string `protobuf:"bytes,1,opt,name=criterio,proto3" json:"criterio,omitempty"`
}

func (x *Criterio) Reset() {
	*x = Criterio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_portal_biblioteca_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Criterio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Criterio) ProtoMessage() {}

func (x *Criterio) ProtoReflect() protoreflect.Message {
	mi := &file_api_portal_biblioteca_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Criterio.ProtoReflect.Descriptor instead.
func (*Criterio) Descriptor() ([]byte, []int) {
	return file_api_portal_biblioteca_proto_rawDescGZIP(), []int{6}
}

func (x *Criterio) GetCriterio() string {
	if x != nil {
		return x.Criterio
	}
	return ""
}

type Vazia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Vazia) Reset() {
	*x = Vazia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_portal_biblioteca_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vazia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vazia) ProtoMessage() {}

func (x *Vazia) ProtoReflect() protoreflect.Message {
	mi := &file_api_portal_biblioteca_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vazia.ProtoReflect.Descriptor instead.
func (*Vazia) Descriptor() ([]byte, []int) {
	return file_api_portal_biblioteca_proto_rawDescGZIP(), []int{7}
}

var File_api_portal_biblioteca_proto protoreflect.FileDescriptor

var file_api_portal_biblioteca_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2d, 0x62, 0x69, 0x62,
	0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62,
	0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61, 0x22, 0x4d, 0x0a, 0x07, 0x55, 0x73, 0x75,
	0x61, 0x72, 0x69, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x70, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c,
	0x6f, 0x71, 0x75, 0x65, 0x61, 0x64, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x71, 0x75, 0x65, 0x61, 0x64, 0x6f, 0x22, 0x7b, 0x0a, 0x05, 0x4c, 0x69, 0x76, 0x72,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x73, 0x62, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x75,
	0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x65, 0x22, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x1f, 0x0a, 0x0d, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x74, 0x0a, 0x0c, 0x55, 0x73,
	0x75, 0x61, 0x72, 0x69, 0x6f, 0x4c, 0x69, 0x76, 0x72, 0x6f, 0x12, 0x33, 0x0a, 0x07, 0x75, 0x73,
	0x75, 0x61, 0x72, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69,
	0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x64, 0x6f, 0x72, 0x52, 0x07, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12,
	0x2f, 0x0a, 0x05, 0x6c, 0x69, 0x76, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x6f, 0x72, 0x52, 0x05, 0x6c, 0x69, 0x76, 0x72, 0x6f,
	0x22, 0x6c, 0x0a, 0x10, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x42, 0x6c, 0x6f, 0x71, 0x75,
	0x65, 0x61, 0x64, 0x6f, 0x12, 0x2d, 0x0a, 0x07, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65,
	0x63, 0x61, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x52, 0x07, 0x75, 0x73, 0x75, 0x61,
	0x72, 0x69, 0x6f, 0x12, 0x29, 0x0a, 0x06, 0x6c, 0x69, 0x76, 0x72, 0x6f, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61,
	0x2e, 0x4c, 0x69, 0x76, 0x72, 0x6f, 0x52, 0x06, 0x6c, 0x69, 0x76, 0x72, 0x6f, 0x73, 0x22, 0x26,
	0x0a, 0x08, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x56, 0x61, 0x7a, 0x69, 0x61, 0x32,
	0xa9, 0x04, 0x0a, 0x10, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x42, 0x69, 0x62, 0x6c, 0x69, 0x6f,
	0x74, 0x65, 0x63, 0x61, 0x12, 0x45, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x45,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x6f, 0x12, 0x18, 0x2e, 0x62, 0x69, 0x62, 0x6c,
	0x69, 0x6f, 0x74, 0x65, 0x63, 0x61, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x4c, 0x69,
	0x76, 0x72, 0x6f, 0x1a, 0x12, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x28, 0x01, 0x12, 0x44, 0x0a, 0x10, 0x52,
	0x65, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x44, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x63, 0x61, 0x6f, 0x12,
	0x18, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61, 0x2e, 0x55, 0x73, 0x75,
	0x61, 0x72, 0x69, 0x6f, 0x4c, 0x69, 0x76, 0x72, 0x6f, 0x1a, 0x12, 0x2e, 0x62, 0x69, 0x62, 0x6c,
	0x69, 0x6f, 0x74, 0x65, 0x63, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x28,
	0x01, 0x12, 0x3b, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x71, 0x75, 0x65, 0x69, 0x61, 0x55, 0x73, 0x75,
	0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x11, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65,
	0x63, 0x61, 0x2e, 0x56, 0x61, 0x7a, 0x69, 0x61, 0x1a, 0x12, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69,
	0x6f, 0x74, 0x65, 0x63, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x0e, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x61, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73,
	0x12, 0x11, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61, 0x2e, 0x56, 0x61,
	0x7a, 0x69, 0x61, 0x1a, 0x12, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x61, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x42, 0x6c, 0x6f, 0x71, 0x75, 0x65,
	0x61, 0x64, 0x6f, 0x73, 0x12, 0x11, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63,
	0x61, 0x2e, 0x56, 0x61, 0x7a, 0x69, 0x61, 0x1a, 0x1c, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f,
	0x74, 0x65, 0x63, 0x61, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x42, 0x6c, 0x6f, 0x71,
	0x75, 0x65, 0x61, 0x64, 0x6f, 0x22, 0x00, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x61, 0x4c, 0x69, 0x76, 0x72, 0x6f, 0x73, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x64, 0x6f, 0x73, 0x12, 0x11, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61,
	0x2e, 0x56, 0x61, 0x7a, 0x69, 0x61, 0x1a, 0x11, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74,
	0x65, 0x63, 0x61, 0x2e, 0x4c, 0x69, 0x76, 0x72, 0x6f, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x4c, 0x69, 0x76, 0x72, 0x6f, 0x73, 0x45, 0x6d, 0x46, 0x61,
	0x6c, 0x74, 0x61, 0x12, 0x11, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61,
	0x2e, 0x56, 0x61, 0x7a, 0x69, 0x61, 0x1a, 0x11, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74,
	0x65, 0x63, 0x61, 0x2e, 0x4c, 0x69, 0x76, 0x72, 0x6f, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3c, 0x0a,
	0x0d, 0x50, 0x65, 0x73, 0x71, 0x75, 0x69, 0x73, 0x61, 0x4c, 0x69, 0x76, 0x72, 0x6f, 0x12, 0x14,
	0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61, 0x2e, 0x43, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x6f, 0x1a, 0x11, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63,
	0x61, 0x2e, 0x4c, 0x69, 0x76, 0x72, 0x6f, 0x22, 0x00, 0x30, 0x01, 0x42, 0x5d, 0x0a, 0x26, 0x62,
	0x72, 0x2e, 0x75, 0x66, 0x75, 0x2e, 0x66, 0x61, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x62, 0x63, 0x30,
	0x37, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x74, 0x6f, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x69,
	0x6f, 0x74, 0x65, 0x63, 0x61, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x2e, 0x75, 0x66, 0x75, 0x2e, 0x66, 0x61, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x62, 0x63, 0x30, 0x37, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x74, 0x6f, 0x2e,
	0x62, 0x69, 0x62, 0x6c, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_portal_biblioteca_proto_rawDescOnce sync.Once
	file_api_portal_biblioteca_proto_rawDescData = file_api_portal_biblioteca_proto_rawDesc
)

func file_api_portal_biblioteca_proto_rawDescGZIP() []byte {
	file_api_portal_biblioteca_proto_rawDescOnce.Do(func() {
		file_api_portal_biblioteca_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_portal_biblioteca_proto_rawDescData)
	})
	return file_api_portal_biblioteca_proto_rawDescData
}

var file_api_portal_biblioteca_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_portal_biblioteca_proto_goTypes = []interface{}{
	(*Usuario)(nil),          // 0: biblioteca.Usuario
	(*Livro)(nil),            // 1: biblioteca.Livro
	(*Status)(nil),           // 2: biblioteca.Status
	(*Identificador)(nil),    // 3: biblioteca.Identificador
	(*UsuarioLivro)(nil),     // 4: biblioteca.UsuarioLivro
	(*UsuarioBloqueado)(nil), // 5: biblioteca.UsuarioBloqueado
	(*Criterio)(nil),         // 6: biblioteca.Criterio
	(*Vazia)(nil),            // 7: biblioteca.Vazia
}
var file_api_portal_biblioteca_proto_depIdxs = []int32{
	3,  // 0: biblioteca.UsuarioLivro.usuario:type_name -> biblioteca.Identificador
	3,  // 1: biblioteca.UsuarioLivro.livro:type_name -> biblioteca.Identificador
	0,  // 2: biblioteca.UsuarioBloqueado.usuario:type_name -> biblioteca.Usuario
	1,  // 3: biblioteca.UsuarioBloqueado.livros:type_name -> biblioteca.Livro
	4,  // 4: biblioteca.PortalBiblioteca.RealizaEmprestimo:input_type -> biblioteca.UsuarioLivro
	4,  // 5: biblioteca.PortalBiblioteca.RealizaDevolucao:input_type -> biblioteca.UsuarioLivro
	7,  // 6: biblioteca.PortalBiblioteca.BloqueiaUsuarios:input_type -> biblioteca.Vazia
	7,  // 7: biblioteca.PortalBiblioteca.LiberaUsuarios:input_type -> biblioteca.Vazia
	7,  // 8: biblioteca.PortalBiblioteca.ListaUsuariosBloqueados:input_type -> biblioteca.Vazia
	7,  // 9: biblioteca.PortalBiblioteca.ListaLivrosEmprestados:input_type -> biblioteca.Vazia
	7,  // 10: biblioteca.PortalBiblioteca.ListaLivrosEmFalta:input_type -> biblioteca.Vazia
	6,  // 11: biblioteca.PortalBiblioteca.PesquisaLivro:input_type -> biblioteca.Criterio
	2,  // 12: biblioteca.PortalBiblioteca.RealizaEmprestimo:output_type -> biblioteca.Status
	2,  // 13: biblioteca.PortalBiblioteca.RealizaDevolucao:output_type -> biblioteca.Status
	2,  // 14: biblioteca.PortalBiblioteca.BloqueiaUsuarios:output_type -> biblioteca.Status
	2,  // 15: biblioteca.PortalBiblioteca.LiberaUsuarios:output_type -> biblioteca.Status
	5,  // 16: biblioteca.PortalBiblioteca.ListaUsuariosBloqueados:output_type -> biblioteca.UsuarioBloqueado
	1,  // 17: biblioteca.PortalBiblioteca.ListaLivrosEmprestados:output_type -> biblioteca.Livro
	1,  // 18: biblioteca.PortalBiblioteca.ListaLivrosEmFalta:output_type -> biblioteca.Livro
	1,  // 19: biblioteca.PortalBiblioteca.PesquisaLivro:output_type -> biblioteca.Livro
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_portal_biblioteca_proto_init() }
func file_api_portal_biblioteca_proto_init() {
	if File_api_portal_biblioteca_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_portal_biblioteca_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Usuario); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_portal_biblioteca_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Livro); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_portal_biblioteca_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_portal_biblioteca_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identificador); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_portal_biblioteca_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsuarioLivro); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_portal_biblioteca_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsuarioBloqueado); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_portal_biblioteca_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Criterio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_portal_biblioteca_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vazia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_portal_biblioteca_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_portal_biblioteca_proto_goTypes,
		DependencyIndexes: file_api_portal_biblioteca_proto_depIdxs,
		MessageInfos:      file_api_portal_biblioteca_proto_msgTypes,
	}.Build()
	File_api_portal_biblioteca_proto = out.File
	file_api_portal_biblioteca_proto_rawDesc = nil
	file_api_portal_biblioteca_proto_goTypes = nil
	file_api_portal_biblioteca_proto_depIdxs = nil
}
